service: tate-ticket-checker-${env:EVENT_ID}
frameworkVersion: '3'
useDotenv: true

provider:
  name: aws
  runtime: nodejs14.x
  region: eu-west-2
  environment:
    EVENT_ID: ${env:EVENT_ID}
    TICKET_URL: ${env:TICKET_URL}
    NUM_DAYS: ${env:NUM_DAYS}
    INTERVAL_MINS: ${env:INTERVAL_MINS}
    DYNAMO_TABLE_NAME: ${env:DYNAMO_TABLE_NAME}
    EMAIL_ADDRESS: ${env:EMAIL_ADDRESS}
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:BatchWriteItem
          Resource: !GetAtt AvailabilityTable.Arn
        - Effect: Allow
          Action:
            - ses:SendEmail
          Resource: '*'

package:
  patterns:
    - '!./**'
    - node_modules/**
    - lib/**
    - package.json
    - handler.js

functions:
  check:
    handler: handler.check
    events:
      - schedule: cron(0/${env:INTERVAL_MINS} 6-23 * * ? *)
    timeout: 20
    layers:
      - { Ref: ChromeLambdaLayer }
  update:
    handler: handler.update
    events:
      - stream:
          type: dynamodb
          arn: !GetAtt AvailabilityTable.StreamArn

layers:
  chrome:
    package:
      artifact: chrome-lambda-layer.zip

resources:
  Resources:
    AvailabilityTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${env:DYNAMO_TABLE_NAME}
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: pk
            AttributeType: S
          - AttributeName: sk
            AttributeType: S
        KeySchema:
          - AttributeName: pk
            KeyType: HASH
          - AttributeName: sk
            KeyType: RANGE
        TimeToLiveSpecification:
          AttributeName: ttl
          Enabled: true
        StreamSpecification:
          StreamViewType: NEW_AND_OLD_IMAGES
